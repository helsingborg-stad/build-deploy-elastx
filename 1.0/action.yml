name: Build Deploy Elastx
description: Build and push docker image to github registry. Deploy to Jelastic.

inputs:
  JELASTIC_API_KEY:
    description: "Jelastic API key"
    required: true
  JELASTIC_NODE_ID:
    description: "Jelastic node id"
    required: true
  JELASTIC_ENV_NAME:
    description: "Jelastic environment name"
    required: true
  JELASTIC_TAG:
    description: "Docker image tag"
    required: true
  DOCKER_CONTEXT:
    description: "Docker context"
    required: true
  DOCKER_FILE_PATH:
    description: "Docker file path"
    required: true
  DOCKER_META_PREFIX:
    description: "Docker meta prefix"
    required: false
    default: ""

runs:
  using: composite

  steps:
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Repository Variable to Lowercase
      id: string
      uses: ASzc/change-string-case-action@v1
      with:
        string: ${{ github.repository }}

    - name: Login GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        github-token: ${{ github.token }}
        images: ghcr.io/${{ steps.string.outputs.lowercase }}
        tags: |
          # set latest tag for default branch
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=semver,pattern=v{{version}}
          type=semver,pattern=v{{major}}.{{minor}}
          type=semver,pattern=v{{major}}
          type=sha
          type=sha,format=long
          prefix={{ inputs.DOCKER_META_PREFIX }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.DOCKER_CONTEXT }}
        platforms: linux/amd64
        file: ${{ inputs.DOCKER_FILE_PATH }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        no-cache: false
        build-args: GITHUB_ACCESS_TOKEN=${{ github.token }}

    - name: Deploy container to Jelastic
      run: |
        curl --request GET --url 'https://app.jelastic.elastx.net/1.0/environment/control/rest/redeploycontainerbyid?session=${{ inputs.JELASTIC_API_KEY }}&nodeId=${{ inputs.JELASTIC_NODE_ID }}&envName=${{ inputs.JELASTIC_ENV_NAME }}&tag={{ inputs.JELASTIC_TAG }}&useExistingVolumes=true'
      shell: bash
